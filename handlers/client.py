from aiogram import types, Dispatcher
from create_bot import dp, bot
from keyboards import client_kb
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from data_base import sqlite_db
import time

"""
@dp.message_handler(commands=['start'])
"""


async def command_start(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,
                           text="""<b><i>–ü—Ä–∏–≤–µ—Ç –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥ üëã</i></b>\n
–Ø –±–æ—Ç –∫–æ—à–µ–ª—ë–∫, —É–º–µ—é —Ö–æ—Ä–æ—à–æ —Å—á–∏—Ç–∞—Ç—å üí≠\n
–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –∑–Ω–∞—Ç—å –∫—É–¥–∞ —Ç—ã 
–ø–æ—Ç—Ä–∞—Ç–∏–ª 15$ –≤—á–µ—Ä–∞, —Ç–æ —Ç—ã –ø–æ –∞–¥—Ä–µ—Å—Éüëç\n
<i>–¢–æ–ª—å–∫–æ –ø—Ä–æ—á–∏—Ç–∞–π —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ üìú</i>""", reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton('–ü—Ä–æ—á–∏—Ç–∞—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ üßê', callback_data=f'read_license')),
                           parse_mode=types.ParseMode.HTML)
    print(f'USER TO CONNECT (User_ID - {message.from_user.id}, User_Name - {message.from_user.full_name})')


"""
@dp.callback_query_handler(text='read_license')
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏, –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–∏—Ü–µ–Ω–∑–∏–∏
"""


async def send_license(callback: types.CallbackQuery):
    await callback.message.answer("""<b>–ü–æ–ª—å–∑—É—è—Å—å @BK_Wallet_bot –≤—ã –Ω–µ –∏–º–µ–µ—Ç–µ –Ω–∏–∫–∞–∫–∏—Ö –ø—Ä–∏—Ç–µ–Ω–∑–∏–π –∫ @iamBohdan. 
–ò —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —Ç–µ–º —á—Ç–æ –æ–Ω –Ω–µ—Å–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π –ø–µ—Ä–µ–¥ –∫–µ–º-–ª–∏–±–æ.</b>

<b>–≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ üîì?</b> –ù–∏—á—Ç–æ –∏ –Ω–µ –∫–æ–≥–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å.

<b>–ù–æ –≤—Å–µ –∂–µ, —è –º–Ω–æ–≥–æ–µ —Å–¥–µ–ª–∞–ª –¥–ª—è —ç—Ç–æ–≥–æ üë®‚Äçüíª.</b> –í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –ë–î –ø—Ä–∏–≤—è–∑—ã–≤–∞—é—Ç—Å—è –∫ –≤–∞—à–µ–º—É telegram ID.

<b>–í—Å—ë –∑–∞–ø–∏—Å–∏ —Ö—Ä–∞–Ω—è—Ç—å—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ üòâ . </b>–ò –¥–∞–∂–µ —è –Ω–µ  —Å–º–æ–≥—É –∏–∑ –ø—Ä–æ—á–∏—Ç–∞—Ç—å. –¢–∞–∫ –Ω–µ –¥–æ–±–∞–≤–ª—è–ª —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –≤–∞—à–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.

<b>–î–∞–≤–∞–π—Ç–µ —Å–¥–µ–ª–∞–µ–º –±–æ—Ç–∞ –µ—â—ë –∫—Ä—É—á–µ üòé,</b> –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏ –ø–æ–∂–µ–ª–∞–Ω–∏–∏–µ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ —Ä–∞–±–æ—Ç–µ BK_Wallet üó≥. –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–ø–∞—Å–∏–±–æ üòä (–Ω–∞–ø–∏—Å–∞–≤ @iamBohdan).


<i>P.S. –ï—â—ë —ç—Ç–æ –ø—Ä–æ–µ–∫—Ç Open-source, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–µ—Ç–µ —Å–∞–º—ã –≤–æ –≤—Å–µ–º —É–±–µ–¥–∏—Ç—å—Å—è</i>""",
                                  reply_markup=InlineKeyboardMarkup().add(
                                      InlineKeyboardButton('–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ ‚öô', callback_data=f'get_started')),
                                  parse_mode=types.ParseMode.HTML)
    await callback.answer()


"""
@dp.callback_query_handler(text='get_started')
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏, —Å—Ç–∞—Ä—Ç –±–æ—Ç–∞ —Å –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
"""


async def get_started(callback: types.CallbackQuery):
    await callback.message.answer(text="–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ ‚ò∫Ô∏è", reply_markup=client_kb.kb_client)
    await callback.answer()


"""
@dp.message_handler(lambda message: message.text.startswith('add'))
–û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ Wallet
"""


async def filters_is_number(message: types.Message):
    global date_upd
    try:
        changes_num = float(message.text.split(' ')[1])  # –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        date_upd = f"{message.from_user.id} ({message.from_user.full_name})", int(
            time.time()), changes_num  # –í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await bot.send_message(chat_id=message.chat.id, text="–î–æ–±–∞–≤—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                               reply_markup=client_kb.inline_kb_client)
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    except:
        await bot.send_message(chat_id=message.chat.id, text="–í–≤–µ–¥–∏–Ω–æ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)


"""
@dp.callback_query_handler(text='add_category')
–í—Å—ë –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π 
"""


async def add_category(message: types.Message):
    global date_upd
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    date_upd = *date_upd, message.text
    await sqlite_db.sql_write(data_update=date_upd)
    await bot.send_message(chat_id=message.chat.id, text=f'<b>–°—á—ë—Ç –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</b> {message.text} —É—Å–ø–µ—à–Ω–æ  –¥–æ–±–∞–ª–µ–Ω ‚úÖ',
                           reply_markup=client_kb.kb_client, parse_mode=types.ParseMode.HTML)


"""
@dp.register_message_handler(lambda message: message.text.startswith('–ë–∞–ª–∞–Ω—Å Wallet üëõ'))
–û–±—Ä–∞–±–æ—Ç—á–∏–∫: –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–ª—å–∫–æ –±–∞–ª–∞–Ω—Å–∞
"""


async def balance_wallet(message: types.Message):
    await sqlite_db.sql_read(message, user_id=message.from_user.id, request_type="output only balance")


"""
@dp.register_message_handler(lambda message: message.text.startswith('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ üîÅ'))
–û–±—Ä–∞–±–æ—Ç—á–∏–∫: –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
"""


async def view_all_expenses(message: types.Message):
    await sqlite_db.sql_read(message, user_id=message.from_user.id)


"""
@dp.register_message_handler(lambda message: message.text.startswith('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á–∞—Å—Ç–∏—á–Ω–æ'))
–û–±—Ä–∞–±–æ—Ç—á–∏–∫: –ß–∞—Å—Ç–∏—á–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å—Ö–æ–¥–æ–≤
"""


async def view_partially_expenses(message: types.Message):
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    await bot.send_message(chat_id=message.chat.id, text='–í—ã–±–µ—Ä–∏ –∫–∞–∫–æ–π –ø–µ—Ä–∏–æ–¥:',
                           reply_markup=InlineKeyboardMarkup().row(
                               InlineKeyboardButton('3 days ‚òÄÔ∏è', callback_data=f'get_3_days'),
                               InlineKeyboardButton('5 days ‚òÄ', callback_data=f'get_5_days')).add(
                               InlineKeyboardButton('30 days ‚òÄ', callback_data=f'get_30_days')))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 3-—Ö –¥–Ω–µ–π
@dp.callback_query_handler(text='get_3_days')
async def view_last_3_days(callback: types.CallbackQuery):
    await sqlite_db.sql_read(callback.message, user_id=callback.from_user.id, request_type='output 3 days')
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5-—Ö –¥–Ω–µ–π
@dp.callback_query_handler(text='get_5_days')
async def view_last_3_days(callback: types.CallbackQuery):
    await sqlite_db.sql_read(callback.message, user_id=callback.from_user.id, request_type='output 5 days')
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 30-—Ö –¥–Ω–µ–π
@dp.callback_query_handler(text='get_30_days')
async def view_last_3_days(callback: types.CallbackQuery):
    await sqlite_db.sql_read(callback.message, user_id=callback.from_user.id, request_type='output 30 days')
    await callback.answer()


"""
@dp.register_message_handler(lambda message: message.text.startswith('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã üëã'))
–û–±—Ä–∞–±–æ—Ç—á–∏–∫: –î–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
"""


async def available_commands(message: types.Message):
    await bot.send_message(chat_id=message.chat.id, text="""<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–º–∞–Ω–¥—ã:</b>
    
<b>add N - –æ—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—á—ë—Ç–∞,</b> 
–≥–¥–µ N –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ - —á–∏—Å–ª–æ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —Å–ø–∏—Å–∞—Ç—å —Å—á—ë—Ç —Å–æ–æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ. 
<b>–ù–∞–ø—Ä–∏–º–µ—Ä:</b> add -5, –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ –≤—ã –ø–æ—Ç—Ä–∞—Ç–µ–ª–∏ 5$, add 5 —á—Ç–æ –≤—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ 5$""",
                           parse_mode=types.ParseMode.HTML)
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)


"""
@dp.register_message_handler(lambda message: message.text.startswith('–û —Å–æ–∑–¥–∞—Ç–µ–ª–µ –∏ –±—É–¥—É—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π üë®‚Äçüíª'))
–û–±—Ä–∞–±–æ—Ç—á–∏–∫: –û —Å–æ–∑–¥–∞—Ç–µ–ª–µ –∏ –±—É–¥—É—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
"""


async def about_creators(message: types.Message):
    await bot.send_message(chat_id=message.chat.id, text="""<b>–°–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞: <i>–ö–æ–≤–∞–ª—å –ë–æ–≥–¥–∞–Ω</i></b>
<i>Front-End, Python  üêç  Developer  ‚å®Ô∏è</i>

<b>–¶–µ–ª—å –±–æ—Ç–∞:</b> <i>C–æ–∑–¥–∞–Ω –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ</i>

    <b>–ë—É–¥—É—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ‚öô:</b>
    
<i><b>–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:</b>
Add option ‚ùé: –î–æ–±–∞–≤–ª—è—Ç—å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏</i>

<i><b>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —Å–∏–ª—É:</b>
Debugging  ‚úÖ: –ü—Ä–æ–±–ª–∞–º–∞ —á–∏—Å–µ–ª —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ–π—á–∫–æ–π
Add option  ‚úÖ: –î–æ–±–∞–≤–ª—è—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–æ–∫—É–ø–æ–∫
Add option  ‚úÖ: –ü–µ—Ä–µ–≤–æ–¥ –≤ Unix —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏
Add option  ‚úÖ: –ü—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–∏ 3, 7, 30 –¥–Ω–µ–π
Upd project ‚úÖ: –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –∫–æ–¥
Upd project ‚úÖ: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
Add option  ‚úÖ: –°–¥–µ–ª–∞—Ç—å –º–µ–Ω—é –µ—â—ë —É–¥–æ–±–Ω–µ–π</i>

<i><b>Cooming soon:</b>
Add option ‚ùå: –£–¥–∞–ª—è—Ç—å/–∏–∑–º–µ–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å—á—ë—Ç–∞
Add option ‚ùå: –ü–æ–ª–Ω–æ–≥–æ —Å—Ç–∏—Ä–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
Add option ‚ùå: –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ/–∞—á–∏–≤–∫–∏
Add option ‚ùå: –î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É —Ä–æ—Å—Ö–æ–¥–æ–≤ 
Add option ‚ùå: –û—á–∏—â–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
<b>And others ...</b></i>

<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>
<i>WebSite: surl.li/axmgh
GitHub: surl.li/axmtf
Email: bohdankoval3012@gmail.com</i>""", parse_mode=types.ParseMode.HTML)
    await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)


def registe_handlers_client(dp: Dispatcher):
    dp.register_message_handler(command_start, commands=['start'])
    dp.register_callback_query_handler(send_license, text='read_license')
    dp.register_callback_query_handler(get_started, text='get_started')
    dp.register_message_handler(filters_is_number,
                                lambda message: message.text.startswith('add') or message.text.startswith('Add'))
    dp.register_message_handler(add_category, lambda
        message: message.text in '–ü—Ä–æ–¥—É–∫—Ç—ã ü•¶ –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç üöÄ –î–æ–º üè† –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è üé° Online Profit ü§ë –ë—å—é—Ç–∏ üíÑ –î—Ä—É–≥–∏–µ ‚û°Ô∏è')
    dp.register_message_handler(balance_wallet, lambda message: message.text.startswith('–ë–∞–ª–∞–Ω—Å Wallet üëõ'))
    dp.register_message_handler(view_all_expenses,
                                lambda message: message.text.startswith('–í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ üîÅ'))
    dp.register_message_handler(view_partially_expenses,
                                lambda message: message.text.startswith('–ß–∞—Å—Ç–∏—á–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ üîé'))
    dp.register_message_handler(available_commands,
                                lambda message: message.text.startswith('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã üëã'))
    dp.register_message_handler(about_creators,
                                lambda message: message.text.startswith('–û –±–æ—Ç–µ ü§ñ'))
